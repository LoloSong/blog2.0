{
    "version": 3,
    "sources": [
        "../../../../src/admin/controller/api/base.js"
    ],
    "names": [
        "http",
        "allowList",
        "_method",
        "__before",
        "session",
        "userInfo",
        "think",
        "isEmpty",
        "fail",
        "action",
        "referrer",
        "model",
        "getOptions",
        "site_url",
        "siteUrlHost",
        "host",
        "referrerHost",
        "length",
        "slice",
        "type",
        "name",
        "controller",
        "indexOf",
        "rest"
    ],
    "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AASE;;;;;AAKA,kBAAYA,IAAZ,EAAkB;AAAA;;AAAA,+DAChB,iCAAMA,IAAN,CADgB;;AAAA,UANlBC,SAMkB,GANN,CAAC,cAAD,EAAiB,eAAjB,EAAkC,iBAAlC,EAAqD,eAArD,EAAsE,cAAtE,CAMM;;AAEhB,UAAKC,OAAL,GAAe,QAAf;AAFgB;AAGjB;AACD;;;;;AAdA;;;;;;mBAkBMC,Q;;;;;;;;;qBACiB,KAAKC,OAAL,CAAa,UAAb,C;;;;;;;;;;4BAA4B,E;;;AAA7CC,sB;;mBACDC,MAAMC,OAAN,CAAcF,QAAd,C;;;;;+CACM,KAAKG,IAAL,CAAU,gBAAV,C;;;AAGLC,oB,GAAS,KAAKT,IAAL,CAAUS,M;;oBACpBA,WAAW,K;;;;;AACRC,sB,GAAW,KAAKV,IAAL,CAAUU,QAAV,E;;qBACQ,KAAKC,KAAL,CAAW,SAAX,EAAsBC,UAAtB,E;;;;AAAlBC,sB,SAAAA,Q;;oBAEF,CAACH,QAAD,IAAa,CAACG,Q;;;;;+CACR,KAAKL,IAAL,CAAU,gBAAV,C;;;AAGLM,yB,GAAc,gBAAMD,QAAN,EAAgBE,I;AAC9BC,0B,GAAe,gBAAMN,QAAN,EAAgBK,I;;oBAChC,CAACD,WAAD,IAAgB,CAACE,Y;;;;;+CACX,KAAKR,IAAL,CAAU,gBAAV,C;;;oBAGNM,YAAYG,MAAZ,GAAqBD,aAAaC,M;;;;;oBAChCD,aAAaE,KAAb,CAAmB,CAACJ,YAAYG,MAAhC,MAA4CH,W;;;;;+CACtC,KAAKN,IAAL,CAAU,gBAAV,C;;;;;;;oBAGNM,YAAYI,KAAZ,CAAkB,CAACF,aAAaC,MAAhC,MAA4CD,Y;;;;;+CACtC,KAAKR,IAAL,CAAU,gBAAV,C;;;;AAKb,mBAAKH,QAAL,GAAgBA,QAAhB;AACIc,kB,GAAOd,SAASc,IAAT,GAAgB,C;AAC3B;;oBACGA,SAAS,C;;;;;oBACPV,WAAW,K;;;;;;;;AAGVW,kB,GAAO,KAAKpB,IAAL,CAAUqB,UAAV,GAAuB,GAAvB,GAA6B,KAAKrB,IAAL,CAAUS,M;;oBAC/C,KAAKR,SAAL,CAAeqB,OAAf,CAAuBF,IAAvB,IAA+B,CAAC,C;;;;;;;;+CAG5B,KAAKZ,IAAL,CAAU,oBAAV,C;;;;;;;;;;;;;;;;;;EA9DgBF,MAAMe,UAAN,CAAiBE,I",
    "file": "../../../../src/admin/controller/api/base.js",
    "sourcesContent": [
        "import {parse} from 'url';\n/**\n * base rest controller\n */\nexport default class extends think.controller.rest {\n  /**\n   * allow list for user\n   * @type {Array}\n   */\n  allowList = ['api/post/put', 'api/post/post', 'api/post/delete', 'api/file/post', 'api/file/get'];\n  /**\n   * [constructor description]\n   * @param  {[type]} http [description]\n   * @return {[type]}      [description]\n   */\n  constructor(http) {\n    super(http);\n    this._method = 'method';\n  }\n  /**\n   * before\n   * @return {} []\n   */\n  async __before() {\n    let userInfo = await this.session('userInfo') || {};\n    if(think.isEmpty(userInfo)) {\n      return this.fail('USER_NOT_LOGIN');\n    }\n\n    let action = this.http.action;\n    if(action !== 'get') {\n      let referrer = this.http.referrer();\n      let {site_url} = await this.model('options').getOptions()\n\n      if(!referrer || !site_url) {\n        return this.fail('REFERRER_ERROR');\n      }\n\n      let siteUrlHost = parse(site_url).host;\n      let referrerHost = parse(referrer).host;\n      if(!siteUrlHost || !referrerHost) {\n        return this.fail('REFERRER_ERROR');\n      }\n\n      if(siteUrlHost.length < referrerHost.length) {\n        if(referrerHost.slice(-siteUrlHost.length) !== siteUrlHost) {\n          return this.fail('REFERRER_ERROR');\n        }\n      } else {\n        if(siteUrlHost.slice(-referrerHost.length) !== referrerHost) {\n          return this.fail('REFERRER_ERROR');\n        }\n      }\n    }\n\n    this.userInfo = userInfo;\n    let type = userInfo.type | 0;\n    //not admin\n    if(type !== 1) {\n      if(action === 'get') {\n        return;\n      }\n      let name = this.http.controller + '/' + this.http.action;\n      if(this.allowList.indexOf(name) > -1) {\n        return;\n      }\n      return this.fail('USER_NO_PERMISSION');\n    }\n  }\n}\n"
    ]
}