{
    "version": 3,
    "sources": [
        "../../../src/home/service/install.js"
    ],
    "names": [
        "startPost",
        "InstallService",
        "ip",
        "dbConfig",
        "think",
        "config",
        "isObject",
        "adapter",
        "type",
        "getModel",
        "name",
        "module",
        "extend",
        "database",
        "model",
        "mysql",
        "checkDbInfo",
        "dbInstance",
        "query",
        "catch",
        "reject",
        "then",
        "version",
        "data",
        "match",
        "isArray",
        "encoding",
        "gt",
        "e",
        "insertData",
        "title",
        "site_url",
        "dbExist",
        "isEmpty",
        "dbFile",
        "ROOT_PATH",
        "sep",
        "isFile",
        "content",
        "readFileSync",
        "split",
        "filter",
        "item",
        "trim",
        "ignoreList",
        "it",
        "indexOf",
        "join",
        "replace",
        "prefix",
        "log",
        "optionsModel",
        "where",
        "update",
        "value",
        "salt",
        "uuid",
        "password_salt",
        "updateOptions",
        "updateConfig",
        "undefined",
        "dbConfigFile",
        "srcPath",
        "statSync",
        "APP_PATH",
        "writeFileSync",
        "createAccount",
        "username",
        "password",
        "md5",
        "email",
        "status",
        "addUser",
        "addStartPost",
        "postModel",
        "user_id",
        "is_public",
        "comment_num",
        "allow_comment",
        "markdown_content",
        "create_time",
        "datetime",
        "update_time",
        "pathname",
        "getContentAndSummary",
        "addPost",
        "insert",
        "saveDbInfo",
        "saveSiteInfo",
        "firekylin",
        "setInstalled",
        "getOptions",
        "service",
        "base",
        "tables",
        "checkInstalled",
        "existTables",
        "map",
        "table",
        "TABLE_NAME",
        "installed",
        "every"
    ],
    "mappings": "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",
    "file": "../../../src/home/service/install.js",
    "sourcesContent": [
        "'use strict';\n\nimport fs from 'fs';\nimport path from 'path';\nimport semver from 'semver';\n\nconst startPost = `\n这是程序自动发布的文章。如果您看到这篇文章，表示您的 Blog 已经安装成功！\n\n如果您对 Firekylin 不是很熟悉，可以先阅读以下常用操作了解一下。\n\n<!--more-->\n\n## 常用操作\n### 登录后台\nFirekylin 的后台登录入口在 [~/admin](/admin)\n\n### 网站基本设置\n后台的 [系统设置](/admin/options/) 提供了与网站相关的选项，例如可在其中的 [基本设置](admin/options/general) 中设置网站名称、Logo地址等。  \n更多的设置，请参考 [官方 WIKI](https://github.com/firekylin/firekylin/wiki/) 的 [系统设置](https://github.com/firekylin/firekylin/wiki/系统设置)\n\n### 评论设置\nFirekylin 没有内置评论模块。但是，Firekylin 可方便地使用第三方评论系统。在后台的 [系统设置](/admin/options/) 的 [评论设置](/admin/options/comment) 的 \\`自定义\\` 模式下粘贴第三方评论系统的代码即可。\n\nFirekylin 还对 [Disqus](https://disqus.com/) 、[畅言](https://changyan.kuaizhan.com/) 、[网易云跟帖](https://gentie.163.com/)  提供了特别的支持，只需要填写对应的网站id即可，不需要粘贴具体的代码。\n\n### 菜单管理\n后台的 [外观设置](admin/appearance/) 可进行 [菜单管理](/admin/appearance/navigation)，包括新增菜单、删除菜单、菜单排序等。  \n新增菜单时，如填写了菜单属性（例如属性为 \\`home\\`），Firekylin 自带的主题会从图标库尝试寻找 \\`icon-home\\` 作为该菜单的图标，如未查到匹配的则不会显示图标。\n\n### 主题外观\nFirekylin 目前只带了一套主题，所以基于 Firekylin 架构的网站长得都差不多^_^  \n主题外观的使用、修改、创建可参考官网 WIKI 的 [主题外观](https://github.com/firekylin/firekylin/wiki/主题外观)。  \n欢迎越来越多的热心用户为 Firekylin 开发主题外观，开发手册详见 [主题开发]( https://github.com/firekylin/firekylin/wiki/主题开发)。\n\n## Markdown 简介\nFirekylin 的编辑器为支持 Markdown 语法的编辑器。Markdown 是一种简化的标记语言，普通的纯文本内容（例如 Windows 的记事本撰写的内容）经过 Markdown 标记之后，可被渲染成赏心悦目的富格式文本。\n\nMarkdown 的格式说明可参考：[英文版](https://guides.github.com/features/mastering-markdown/)、[中文版](https://coding.net/help/doc/project/markdown.html)\n\n好了，介绍就这么多，快开始你的 Blog 之旅吧！\n`;\n\nclass InstallService extends think.service.base {\n  constructor(ip) {\n    super(ip);\n    this.ip = ip;\n\n    let dbConfig = think.config('db');\n    if(think.isObject(dbConfig.adapter) && think.isObject(dbConfig.adapter[dbConfig.type])) {\n      this.dbConfig = dbConfig.adapter[dbConfig.type];\n    }\n  }\n\n  getModel(name, module) {\n    let dbConfig;\n    if(name === true) {\n      dbConfig = think.extend({}, this.dbConfig);\n      dbConfig.database = '';\n      name = '';\n    }else{\n      dbConfig = this.dbConfig;\n    }\n    return this.model(name || 'user', {\n      adapter: {\n        mysql: dbConfig\n      }\n    }, module)\n  }\n\n  checkDbInfo() {\n    let dbInstance = this.getModel(true);\n    return dbInstance.query('SELECT VERSION()').catch(() => {\n      return Promise.reject('数据库信息有误');\n    }).then(data => {\n      let version;\n      try {\n        /** version compatible, set encoding utf8mb4 when MySQL larger than 5.5.3 */\n        version = data[0]['VERSION()'].match(/^[\\d.]/);\n        if(think.isArray(version)) {\n          version = data[0]['VERSION()'];\n        } else {\n          version = version[0];\n        }\n\n        this.dbConfig.encoding = semver.gt(version, '5.5.3') ? 'utf8mb4' : 'utf8';\n      } catch(e) {\n        this.dbConfig.encoding = 'utf8';\n      }\n      return version;\n    });\n  }\n\n  async insertData(title, site_url) {\n    let model = this.getModel(true);\n    let dbExist = await model.query(\n      'SELECT `TABLE_NAME` FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_SCHEMA`= \\''+\n      this.dbConfig.database + '\\''\n    );\n    if(think.isEmpty(dbExist)) {\n      await model.query('CREATE DATABASE `' + this.dbConfig.database + '`').catch(() => {});\n    }\n\n    let dbFile = think.ROOT_PATH + think.sep + 'firekylin.sql';\n    if(!think.isFile(dbFile)) {\n      return Promise.reject('数据库文件（firekylin.sql）不存在，请重新下载');\n    }\n\n\n    let content = fs.readFileSync(dbFile, 'utf8');\n    content = content.split('\\n').filter(item => {\n      item = item.trim();\n      let ignoreList = ['#', 'LOCK', 'UNLOCK'];\n      for(let it of ignoreList) {\n        if(item.indexOf(it) === 0) {\n          return false;\n        }\n      }\n      return true;\n    }).join(' ');\n    content = content.replace(/\\/\\*.*?\\*\\//g, '').replace(/fk_/g, this.dbConfig.prefix || '');\n\n    //导入数据\n    model = this.getModel();\n    content = content.split(';');\n    try{\n      for(let item of content) {\n        item = item.trim();\n        if(item) {\n          think.log(item);\n          await model.query(item);\n        }\n      }\n    }catch(e) {\n      think.log(e);\n      return Promise.reject('数据表导入失败，请在控制台下查看具体的错误信息，并在 GitHub 上发 issue。');\n    }\n\n    let optionsModel = this.getModel('options');\n    await optionsModel.where('1=1').update({value: ''});\n    let salt = think.uuid(10) + '!@#$%^&*';\n    this.password_salt = salt;\n\n    await optionsModel.updateOptions('title', title);\n    await optionsModel.updateOptions('site_url', site_url);\n    await optionsModel.updateOptions('navigation', JSON.stringify([\n      {'label':'首页', 'url':'/', 'option':'home'},\n      {'label':'归档', 'url':'/archives/', 'option':'archive'},\n      {'label':'标签', 'url':'/tags', 'option':'tags'},\n      {'label':'关于', 'url':'/about', 'option':'user'},\n      {'label':'友链', 'url':'/links', 'option':'link'}\n    ]));\n    await optionsModel.updateOptions('password_salt', salt);\n    await optionsModel.updateOptions('logo_url', '/static/img/firekylin.jpg');\n    await optionsModel.updateOptions('theme', 'firekylin');\n    //optionsModel.close();\n  }\n\n  updateConfig() {\n    let data = {\n      type: 'mysql',\n      adapter: {\n        mysql: this.dbConfig\n      }\n    }\n    let content = `\n      \"use strict\";\n      exports.__esModule = true;\n      exports.default = ${JSON.stringify(data, undefined, 4)}\n    `;\n\n    let dbConfigFile;\n    try {\n      let srcPath = path.join(think.ROOT_PATH, 'src/common/config');\n      fs.statSync(srcPath);\n      dbConfigFile = path.join(srcPath, 'db.js');\n    } catch(e) {\n      dbConfigFile = path.join(think.APP_PATH, '/common/config/db.js');\n    }\n    fs.writeFileSync(dbConfigFile, content);\n    think.config('db', data);\n  }\n\n  async createAccount(username, password) {\n    password = think.md5(this.password_salt + password);\n\n    let model = this.getModel('user', 'admin');\n    let data = {\n      username,\n      password,\n      email: '',\n      type: 1,\n      status: 1,\n      ip: this.ip\n    }\n    await model.addUser(data);\n    //model.close();\n  }\n\n  async addStartPost() {\n    let postModel = this.getModel('post', 'admin');\n    let data = {\n      type: 0,\n      status: 3,\n      user_id: 1,\n      is_public: 1,\n      comment_num: 0,\n      allow_comment: 1,\n      title: '欢迎使用 Firekylin',\n      markdown_content:startPost,\n      create_time: think.datetime(),\n      update_time: think.datetime(),\n      pathname: 'hello-world-via-firekylin'\n    };\n\n    data = await postModel.getContentAndSummary(data);\n    let insert = await postModel.addPost(data);\n    return insert;\n  }\n\n  async saveDbInfo(dbConfig) {\n    this.dbConfig = dbConfig;\n    this.dbConfig.type = 'mysql';\n    await this.checkDbInfo();\n    this.updateConfig();\n  }\n\n  async saveSiteInfo({title, site_url, username, password}) {\n    await this.insertData(title, site_url);\n    await this.createAccount(username, password);\n    await this.addStartPost();\n\n    firekylin.setInstalled();\n\n    let optionsModel = this.getModel('options');\n    await optionsModel.getOptions(true);\n    //optionsModel.close();\n  }\n}\n\nconst tables = ['cate', 'post', 'post_cate', 'post_tag', 'tag', 'user'];\nInstallService.checkInstalled = async function() {\n  let dbConfig = think.config('db');\n  let database = dbConfig.database;\n  let prefix = dbConfig.prefix;\n  if(!database && think.isObject(dbConfig.adapter) && think.isObject(dbConfig.adapter[dbConfig.type])) {\n    database = dbConfig.adapter[dbConfig.type].database;\n    prefix = dbConfig.adapter[dbConfig.type].prefix;\n  }\n\n  try {\n    let existTables = await think.model('user', dbConfig).query(\n      'SELECT `TABLE_NAME` FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_SCHEMA`=\\'' +\n      database + '\\''\n    );\n    if(think.isEmpty(existTables)) {\n      return false;\n    }\n\n    existTables = existTables.map(table => table.TABLE_NAME);\n    let installed = tables.every(table => existTables.indexOf(prefix+table) > -1);\n    if(installed) {\n      firekylin.setInstalled();\n    }\n    return installed;\n  } catch(e) {\n    think.log(e);\n    return false;\n  }\n};\n\nexport default InstallService;\n"
    ]
}